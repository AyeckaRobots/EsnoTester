# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import board_pb2 as board__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in board_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BoardServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChannelCnr = channel.unary_unary(
                '/bca.board.BoardService/GetChannelCnr',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
                response_deserializer=board__pb2.Cnr.FromString,
                _registered_method=True)
        self.GetChannelLockInfo = channel.unary_unary(
                '/bca.board.BoardService/GetChannelLockInfo',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
                response_deserializer=board__pb2.LockReport.FromString,
                _registered_method=True)
        self.GetChannelInfo = channel.unary_unary(
                '/bca.board.BoardService/GetChannelInfo',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
                response_deserializer=board__pb2.PeriodicReport.FromString,
                _registered_method=True)
        self.GetChannelInfoNspe2 = channel.unary_unary(
                '/bca.board.BoardService/GetChannelInfoNspe2',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
                response_deserializer=board__pb2.Nspe2Report.FromString,
                _registered_method=True)
        self.GetBoardInfo = channel.unary_unary(
                '/bca.board.BoardService/GetBoardInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=board__pb2.BoardInfo.FromString,
                _registered_method=True)
        self.InitiateBit = channel.unary_unary(
                '/bca.board.BoardService/InitiateBit',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.GetChannelConfiguration = channel.unary_unary(
                '/bca.board.BoardService/GetChannelConfiguration',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
                response_deserializer=board__pb2.ChannelConfiguration.FromString,
                _registered_method=True)
        self.ConfigureChannel = channel.unary_unary(
                '/bca.board.BoardService/ConfigureChannel',
                request_serializer=board__pb2.ChannelConfiguration.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.GetMultiChannelCnr = channel.unary_unary(
                '/bca.board.BoardService/GetMultiChannelCnr',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
                response_deserializer=board__pb2.MultiCnr.FromString,
                _registered_method=True)
        self.GetPeriodicReport = channel.unary_unary(
                '/bca.board.BoardService/GetPeriodicReport',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
                response_deserializer=board__pb2.FullPeriodicReport.FromString,
                _registered_method=True)
        self.ConfigureDataInterface = channel.unary_unary(
                '/bca.board.BoardService/ConfigureDataInterface',
                request_serializer=board__pb2.DataInterface.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.NotifyEvent = channel.unary_unary(
                '/bca.board.BoardService/NotifyEvent',
                request_serializer=board__pb2.Event.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.InitPlatform = channel.unary_unary(
                '/bca.board.BoardService/InitPlatform',
                request_serializer=board__pb2.PlatformConfig.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.UpdateFpgaDataInterfaceIp = channel.unary_unary(
                '/bca.board.BoardService/UpdateFpgaDataInterfaceIp',
                request_serializer=board__pb2.DataInterfaceIpConfiguration.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.FpgaDebugRead = channel.unary_unary(
                '/bca.board.BoardService/FpgaDebugRead',
                request_serializer=board__pb2.FpgaDebug.SerializeToString,
                response_deserializer=board__pb2.FpgaDebug.FromString,
                _registered_method=True)
        self.FpgaDebugWrite = channel.unary_unary(
                '/bca.board.BoardService/FpgaDebugWrite',
                request_serializer=board__pb2.FpgaDebug.SerializeToString,
                response_deserializer=board__pb2.FpgaDebug.FromString,
                _registered_method=True)
        self.OxfordDebugRead = channel.unary_unary(
                '/bca.board.BoardService/OxfordDebugRead',
                request_serializer=board__pb2.OxfordDebug.SerializeToString,
                response_deserializer=board__pb2.OxfordDebug.FromString,
                _registered_method=True)
        self.OxfordDebugWrite = channel.unary_unary(
                '/bca.board.BoardService/OxfordDebugWrite',
                request_serializer=board__pb2.OxfordDebug.SerializeToString,
                response_deserializer=board__pb2.OxfordDebug.FromString,
                _registered_method=True)
        self.SetTodDistribution = channel.unary_unary(
                '/bca.board.BoardService/SetTodDistribution',
                request_serializer=board__pb2.TodDistribution.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.GetTodDistribution = channel.unary_unary(
                '/bca.board.BoardService/GetTodDistribution',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=board__pb2.TodDistribution.FromString,
                _registered_method=True)
        self.SetRangingConfiguration = channel.unary_unary(
                '/bca.board.BoardService/SetRangingConfiguration',
                request_serializer=board__pb2.RangingConfiguration.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.GetRangingConfiguration = channel.unary_unary(
                '/bca.board.BoardService/GetRangingConfiguration',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=board__pb2.RangingConfiguration.FromString,
                _registered_method=True)
        self.SetLed = channel.unary_unary(
                '/bca.board.BoardService/SetLed',
                request_serializer=board__pb2.Led.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.GetLed = channel.unary_unary(
                '/bca.board.BoardService/GetLed',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=board__pb2.Led.FromString,
                _registered_method=True)
        self.ConfigureBeamHopping = channel.unary_unary(
                '/bca.board.BoardService/ConfigureBeamHopping',
                request_serializer=board__pb2.BeamHoppingEvent.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.UndoBeamHoppingConfig = channel.unary_unary(
                '/bca.board.BoardService/UndoBeamHoppingConfig',
                request_serializer=board__pb2.BeamHoppingEvent.SerializeToString,
                response_deserializer=board__pb2.Result.FromString,
                _registered_method=True)
        self.GetInputPowerLevelDestructive = channel.unary_unary(
                '/bca.board.BoardService/GetInputPowerLevelDestructive',
                request_serializer=board__pb2.ChannelInputPair.SerializeToString,
                response_deserializer=board__pb2.InputPowerLevel.FromString,
                _registered_method=True)


class BoardServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetChannelCnr(self, request, context):
        """gets CNR value for the channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannelLockInfo(self, request, context):
        """get lock info, should be called on locked->unlocked and unlocked/locked transitions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannelInfo(self, request, context):
        """gets periodic report content for the channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannelInfoNspe2(self, request, context):
        """gets periodic report content for the channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBoardInfo(self, request, context):
        """gets general board info only
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateBit(self, request, context):
        """board control and configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannelConfiguration(self, request, context):
        """channel configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultiChannelCnr(self, request, context):
        """get CNR value for multiple channels
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeriodicReport(self, request, context):
        """get periodic report together with NSPE2 report
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureDataInterface(self, request, context):
        """! TC1ProX stuff
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitPlatform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFpgaDataInterfaceIp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FpgaDebugRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FpgaDebugWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OxfordDebugRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OxfordDebugWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTodDistribution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTodDistribution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRangingConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRangingConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureBeamHopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UndoBeamHoppingConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInputPowerLevelDestructive(self, request, context):
        """gets Input Power Level value for the given input
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BoardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetChannelCnr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelCnr,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
                    response_serializer=board__pb2.Cnr.SerializeToString,
            ),
            'GetChannelLockInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelLockInfo,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
                    response_serializer=board__pb2.LockReport.SerializeToString,
            ),
            'GetChannelInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelInfo,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
                    response_serializer=board__pb2.PeriodicReport.SerializeToString,
            ),
            'GetChannelInfoNspe2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelInfoNspe2,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
                    response_serializer=board__pb2.Nspe2Report.SerializeToString,
            ),
            'GetBoardInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBoardInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=board__pb2.BoardInfo.SerializeToString,
            ),
            'InitiateBit': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateBit,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'GetChannelConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelConfiguration,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
                    response_serializer=board__pb2.ChannelConfiguration.SerializeToString,
            ),
            'ConfigureChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureChannel,
                    request_deserializer=board__pb2.ChannelConfiguration.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'GetMultiChannelCnr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultiChannelCnr,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
                    response_serializer=board__pb2.MultiCnr.SerializeToString,
            ),
            'GetPeriodicReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeriodicReport,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.Int32Value.FromString,
                    response_serializer=board__pb2.FullPeriodicReport.SerializeToString,
            ),
            'ConfigureDataInterface': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureDataInterface,
                    request_deserializer=board__pb2.DataInterface.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'NotifyEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyEvent,
                    request_deserializer=board__pb2.Event.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'InitPlatform': grpc.unary_unary_rpc_method_handler(
                    servicer.InitPlatform,
                    request_deserializer=board__pb2.PlatformConfig.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'UpdateFpgaDataInterfaceIp': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFpgaDataInterfaceIp,
                    request_deserializer=board__pb2.DataInterfaceIpConfiguration.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'FpgaDebugRead': grpc.unary_unary_rpc_method_handler(
                    servicer.FpgaDebugRead,
                    request_deserializer=board__pb2.FpgaDebug.FromString,
                    response_serializer=board__pb2.FpgaDebug.SerializeToString,
            ),
            'FpgaDebugWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.FpgaDebugWrite,
                    request_deserializer=board__pb2.FpgaDebug.FromString,
                    response_serializer=board__pb2.FpgaDebug.SerializeToString,
            ),
            'OxfordDebugRead': grpc.unary_unary_rpc_method_handler(
                    servicer.OxfordDebugRead,
                    request_deserializer=board__pb2.OxfordDebug.FromString,
                    response_serializer=board__pb2.OxfordDebug.SerializeToString,
            ),
            'OxfordDebugWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.OxfordDebugWrite,
                    request_deserializer=board__pb2.OxfordDebug.FromString,
                    response_serializer=board__pb2.OxfordDebug.SerializeToString,
            ),
            'SetTodDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTodDistribution,
                    request_deserializer=board__pb2.TodDistribution.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'GetTodDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTodDistribution,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=board__pb2.TodDistribution.SerializeToString,
            ),
            'SetRangingConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRangingConfiguration,
                    request_deserializer=board__pb2.RangingConfiguration.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'GetRangingConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRangingConfiguration,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=board__pb2.RangingConfiguration.SerializeToString,
            ),
            'SetLed': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLed,
                    request_deserializer=board__pb2.Led.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'GetLed': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLed,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=board__pb2.Led.SerializeToString,
            ),
            'ConfigureBeamHopping': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureBeamHopping,
                    request_deserializer=board__pb2.BeamHoppingEvent.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'UndoBeamHoppingConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UndoBeamHoppingConfig,
                    request_deserializer=board__pb2.BeamHoppingEvent.FromString,
                    response_serializer=board__pb2.Result.SerializeToString,
            ),
            'GetInputPowerLevelDestructive': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInputPowerLevelDestructive,
                    request_deserializer=board__pb2.ChannelInputPair.FromString,
                    response_serializer=board__pb2.InputPowerLevel.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bca.board.BoardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('bca.board.BoardService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BoardService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetChannelCnr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetChannelCnr',
            google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
            board__pb2.Cnr.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChannelLockInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetChannelLockInfo',
            google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
            board__pb2.LockReport.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChannelInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetChannelInfo',
            google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
            board__pb2.PeriodicReport.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChannelInfoNspe2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetChannelInfoNspe2',
            google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
            board__pb2.Nspe2Report.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBoardInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetBoardInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            board__pb2.BoardInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitiateBit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/InitiateBit',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChannelConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetChannelConfiguration',
            google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
            board__pb2.ChannelConfiguration.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/ConfigureChannel',
            board__pb2.ChannelConfiguration.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMultiChannelCnr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetMultiChannelCnr',
            google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
            board__pb2.MultiCnr.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPeriodicReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetPeriodicReport',
            google_dot_protobuf_dot_wrappers__pb2.Int32Value.SerializeToString,
            board__pb2.FullPeriodicReport.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureDataInterface(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/ConfigureDataInterface',
            board__pb2.DataInterface.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/NotifyEvent',
            board__pb2.Event.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitPlatform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/InitPlatform',
            board__pb2.PlatformConfig.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateFpgaDataInterfaceIp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/UpdateFpgaDataInterfaceIp',
            board__pb2.DataInterfaceIpConfiguration.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FpgaDebugRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/FpgaDebugRead',
            board__pb2.FpgaDebug.SerializeToString,
            board__pb2.FpgaDebug.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FpgaDebugWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/FpgaDebugWrite',
            board__pb2.FpgaDebug.SerializeToString,
            board__pb2.FpgaDebug.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OxfordDebugRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/OxfordDebugRead',
            board__pb2.OxfordDebug.SerializeToString,
            board__pb2.OxfordDebug.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OxfordDebugWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/OxfordDebugWrite',
            board__pb2.OxfordDebug.SerializeToString,
            board__pb2.OxfordDebug.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetTodDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/SetTodDistribution',
            board__pb2.TodDistribution.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTodDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetTodDistribution',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            board__pb2.TodDistribution.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetRangingConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/SetRangingConfiguration',
            board__pb2.RangingConfiguration.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRangingConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetRangingConfiguration',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            board__pb2.RangingConfiguration.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/SetLed',
            board__pb2.Led.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetLed',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            board__pb2.Led.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureBeamHopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/ConfigureBeamHopping',
            board__pb2.BeamHoppingEvent.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UndoBeamHoppingConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/UndoBeamHoppingConfig',
            board__pb2.BeamHoppingEvent.SerializeToString,
            board__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInputPowerLevelDestructive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bca.board.BoardService/GetInputPowerLevelDestructive',
            board__pb2.ChannelInputPair.SerializeToString,
            board__pb2.InputPowerLevel.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
